{"version":3,"sources":["components/Navbar.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","getLinkClass","isActive","classNames","className","role","to","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","personSlug","useParams","map","born","died","mother","motherName","father","fatherName","getPerson","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useEffect","peopleFromServer","catch","finally","length","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"oQAGaA,EAAS,WACpB,IAAMC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnBC,IAAW,cAAe,CAAE,8BAA+BD,GADxC,EAIrB,OACE,qBACE,UAAQ,MACRE,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASE,GAAG,IAAIF,UAAWH,EAA3B,kBAIA,cAAC,IAAD,CAASK,GAAG,SAASF,UAAWH,EAAhC,0BAOT,EC5BYM,EAAW,WACtB,OACE,oBAAIH,UAAU,QAAd,sBAEH,ECJYI,EAAe,WAC1B,OACE,oBAAIJ,UAAU,QAAd,2BAEH,E,sBCFYK,G,MAAS,kBACpB,qBAAKL,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCOf,SAASM,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCTM,IAAMQ,EAAa,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAC3B,OACE,cAAC,IAAD,CACEd,GAAE,aAAQc,EAAOC,MACjBjB,UAAWD,IAAW,CACpB,kBAAkC,MAAfiB,EAAOE,MAH9B,SAMGF,EAAOG,MAGb,ECVYC,EAAc,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OACpBC,EAAeC,cAAfD,WAER,OACE,wBACE,UAAQ,cACRtB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGqB,EAAOG,KAAI,SAAAR,GAAM,OAChB,qBAEE,UAAQ,SACRhB,UAAWD,IAAW,CACpB,yBAA0BiB,EAAOC,OAASK,IAJ9C,UAOE,6BACE,cAAC,EAAD,CAAYN,OAAQA,MAGtB,6BAAKA,EAAOE,MACZ,6BAAKF,EAAOS,OACZ,6BAAKT,EAAOU,OAEZ,6BACGV,EAAOW,OACH,cAAC,EAAD,CAAYX,OAAQA,EAAOW,SAC3BX,EAAOY,YAAc,MAG5B,6BACGZ,EAAOa,OACH,cAAC,EAAD,CAAYb,OAAQA,EAAOa,SAC3Bb,EAAOc,YAAc,QAvBvBd,EAAOC,KAFE,QAgCzB,ECpDKc,EAAY,SAACZ,EAAcE,GAC/B,OAAOA,EAAOW,MAAK,SAAAhB,GAAM,OAAIA,EAAOG,OAASA,CAApB,GAC1B,EAEYc,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOb,EAAP,KAAec,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,qBAAU,WACRH,GAAa,GAEb/B,IACGK,MAAK,SAAA8B,GACJN,EAAUM,EAAiBjB,KAAI,SAAAR,GAAM,kCAChCA,GADgC,IAEnCW,OAAQI,EAAUf,EAAOY,YAAc,GAAIa,GAC3CZ,OAAQE,EAAUf,EAAOc,YAAc,GAAIW,IAHR,IAKtC,IACAC,OAAM,kBAAMH,GAAY,EAAlB,IACNI,SAAQ,kBAAMN,GAAa,EAAnB,GACZ,GAAE,IAGD,qCACE,oBAAIrC,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACGoC,EAAa,cAAC,EAAD,IACZ,qCACGE,GACC,mBAAG,UAAQ,qBAAqBtC,UAAU,kBAA1C,kCAKiB,IAAlBqB,EAAOuB,SAAiBN,GACvB,mBAAG,UAAQ,kBAAX,+CAKiB,IAAlBjB,EAAOuB,SAAiBN,GACvB,cAAC,EAAD,CAAajB,OAAQA,aAQpC,ECnDYwB,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAM7C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8C,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU7C,GAAG,IAAI8C,SAAO,MAEpD,cAAC,IAAD,CAAOF,KAAK,SAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,eAAeC,QAAS,cAAC,EAAD,QAGtC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAdhB,ECAnBE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.25ecaae4.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean; }) => (\n    classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../types';\n\nexport const PersonLink = ({ person }: { person: Person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\nexport const PeopleTable = ({ people }: { people: Person[] }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === personSlug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n\n            <td>\n              {person.mother\n                ? (<PersonLink person={person.mother} />)\n                : (person.motherName || '-')}\n            </td>\n\n            <td>\n              {person.father\n                ? (<PersonLink person={person.father} />)\n                : (person.fatherName || '-')}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\n\nconst getPerson = (name: string, people: Person[]): Person | undefined => {\n  return people.find(person => person.name === name);\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromServer => {\n        setPeople(peopleFromServer.map(person => ({\n          ...person,\n          mother: getPerson(person.motherName || '', peopleFromServer),\n          father: getPerson(person.fatherName || '', peopleFromServer),\n        })));\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (<Loader />) : (\n            <>\n              {hasError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {people.length === 0 && !hasError && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {people.length !== 0 && !hasError && (\n                <PeopleTable people={people} />\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route path=\":personSlug?\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}